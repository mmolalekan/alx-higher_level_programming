==========================
Usage of 4-print_square.py
==========================

This module defines that function that prints a square using '#'.

Usage
=====
The expected result of 'print_square(3)':
###
###
###

>>> print_square = __import__('4-print_square').print_square

# Test case 1: Valid positive integer size
>>> print_square(5)
#####
#####
#####
#####
#####

# Test case 2: Valid positive float size
>>> print_square(3.5)
Traceback (most recent call last):
TypeError: size must be an integer

# Test case 3: Valid zero size
>>> print_square(0)

# Test case 4: Negative integer size
>>> print_square(-5)
Traceback (most recent call last):
ValueError: size must be >= 0

# Test case 5: Negative float size
>>> print_square(-2.5)
Traceback (most recent call last):
TypeError: size must be an integer

# Test case 6: Empty string as size
>>> print_square('')
Traceback (most recent call last):
TypeError: size must be an integer

# Test case 7: List as size
>>> print_square([5])
Traceback (most recent call last):
TypeError: size must be an integer

# Test case 8: None as size
>>> print_square(None)
Traceback (most recent call last):
TypeError: size must be an integer

# Test case 9: Valid large size
>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

# Test case 10: Valid size with leading/trailing spaces
>>> print_square(  7   )
#######
#######
#######
#######
#######
#######
#######
