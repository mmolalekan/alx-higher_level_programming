==============================
how to use 2-matrix_divided.py
==============================

This module defines matrix division function 'matrix_divided(matrix, div)'

usage
=====
divides all elements of a matrix by div

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test case 1: valid input
>>> matrix = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

 Test case 2: Dividing by zero
>>> matrix = [[1, 2], [3, 4]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
ZeroDivisionError: division by zero

# Test case 3: Invalid div type
>>> matrix = [[1, 2], [3, 4]]
>>> div = '2'
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: div must be a number

# Test case 4: Rows of different sizes
>>> matrix = [[1, 2, 3], [4, 5], [6, 7, 8]]
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

# Test case 5: Non-numeric values in the matrix
>>> matrix = [[1, 2], [3, 'four']]
>>> div = 2
>>> matrix_divided(matrix, div) #doctest: +ELLIPSIS
Traceback (most recent call last): 
TypeError: matrix must be a matrix (list of lists) ... integers/floats

# Test case 6: Empty matrix
>>> matrix = []
>>> div = 2
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
IndexError: list index out of range

# Test case 7: Matrix with a single row
>>> matrix = [[1, 2, 3]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.0, 1.5]]

# Test case 8: Matrix with a single column
>>> matrix = [[1], [2], [3]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5], [1.0], [1.5]]

# Test case 9: Matrix with negative values
>>> matrix = [[-1, -2], [3, 4]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[-0.5, -1.0], [1.5, 2.0]]

# Test case 10: Matrix with mixed integer and float values
>>> matrix = [[1, 2.5], [3.8, 4]]
>>> div = 2
>>> matrix_divided(matrix, div)
[[0.5, 1.25], [1.9, 2.0]]