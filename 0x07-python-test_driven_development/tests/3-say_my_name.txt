==========================
Usage of 3-say_my_name.txt
==========================

This module defines a function that takes two arguments: first and last name.
It turns the two into a string.

usage
=====
My name is <first name> <last name>

>>> say_my_name = __import__('3-say_my_name').say_my_name

# Test case 1: First name and last name provided
>>> say_my_name("John", "Doe")
My name is John Doe

# Test case 2: First name provided, last name empty
>>> say_my_name("John")
My name is John 

# Test case 3: First name provided as an integer
>>> say_my_name(123)
Traceback (most recent call last):
TypeError: first_name must be a string

# Test case 4: Last name provided as an integer
>>> say_my_name("John", 456)
Traceback (most recent call last):
TypeError: last_name must be a string

# Test case 5: Empty strings provided for both first name and last name
>>> say_my_name("", "")
My name is  

# Test case 6: First name provided as a float
>>> say_my_name(3.14, "Doe")
Traceback (most recent call last):
TypeError: first_name must be a string

# Test case 7: Last name provided as None
>>> say_my_name("John", None)
Traceback (most recent call last):
TypeError: last_name must be a string

# Test case 8: First name and last name provided as special characters
>>> say_my_name("$#@!", "@#$%")
My name is $#@! @#$%

# Test case 9: First name and last name provided with leading/trailing spaces
>>> say_my_name("   John   ", "   Doe   ")
My name is    John       Doe   

# Test case 10: First name and last name provided with Unicode characters
>>> say_my_name("José", "García")
My name is José García
